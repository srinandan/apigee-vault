# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: vault
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
    networking.gke.io/internal-load-balancer-allow-global-access: "true"  
spec:
  type: LoadBalancer
  loadBalancerIP: 10.138.0.3
  ports:
    - name: http
      port: 8200
    - name: server
      port: 8201
  selector:
    app: vault
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  labels:
    app: vault
spec:
  serviceName: "vault"
  selector:
    matchLabels:
      app: vault
  replicas: 2
  template:
    metadata:
      labels:
        app: vault
    spec:
      initContainers:
        - name: config
          image: busybox
          env:
            - name: GCS_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: gcs-bucket-name
            - name: PROJECT_ID
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: project-id
            - name: KEY_RING
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: key-ring
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: region
            - name: CRYPTO_KEY
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: crypto-key                  
          command: ["/bin/sh", "-c"]
          args:
            - |
              cat > /etc/vault/config/vault.hcl <<EOF
              listener "tcp" {
                address = "0.0.0.0:8200"
                tls_cert_file = "/etc/vault/tls/vault.pem"
                tls_key_file = "/etc/vault/tls/vault-key.pem"
                tls_min_version = "tls12"
              }

              storage "gcs" {
                bucket = "${GCS_BUCKET_NAME}"
                ha_enabled = "true"
              }

              seal "gcpckms" {
                credentials = "/etc/secret/client_secret.json"
                project     = "${PROJECT_ID}"
                region      = "${REGION}"
                key_ring    = "${KEY_RING}"
                crypto_key  = "${CRYPTO_KEY}"
              }

              disable_mlock = true
              ui = false
              
              EOF

          volumeMounts:
            - name: vault-config
              mountPath: /etc/vault/config
            - name: svc-account-volume
              mountPath: /etc/secret
              readOnly: true              
      containers:                   
        - name: vault
          image: "vault:1.6.1"
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/secret/client_secret.json #ensure the file name matches the kubectl secret
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: "status.podIP"
            - name: "VAULT_API_ADDR"
              valueFrom:
                configMapKeyRef:
                  name: vault
                  key: api-addr
            - name: "VAULT_CLUSTER_ADDR"
              value: "https://$(POD_IP):8201"
          args:
            - "server"
            - "-config=/etc/vault/config/vault.hcl"
          ports:
            - name: http
              containerPort: 8200
              protocol: "TCP"
            - name: server
              containerPort: 8201
              protocol: "TCP"
          #readinessProbe:
          #  httpGet:
          #    path: "/v1/sys/health?standbyok=true"
          #    port: 8200
          #    #scheme: HTTPS
          #    scheme: HTTP
          #  initialDelaySeconds: 5
          #  periodSeconds: 10
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          volumeMounts:
            - name: vault-config
              mountPath: /etc/vault/config
            - name: vault-tls
              mountPath: /etc/vault/tls
            - name: svc-account-volume
              mountPath: /etc/secret
              readOnly: true              
      volumes:
        - name: vault-config
          emptyDir: {}
        - name: vault-tls
          secret:
            secretName: vault
        - name: svc-account-volume
          secret:
            defaultMode: 420
            secretName: vault-svc-account            
